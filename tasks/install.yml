- name: Install owncloud
  apt:
    name: owncloud-complete-files
    update_cache: yes
    state: latest

- name: Check for owncloud already being installed
  shell: occ | grep "ownCloud is not installed" | wc -l
  register: occ_already_installed

- name: Bootstrap owncloud database
  shell: >
    occ maintenance:install
    --database-name "{{ owncloud_database_name }}"
    --database-user "{{ owncloud_database_user }}"
    --database-pass "{{ owncloud_database_pass }}"
    --admin-user "{{ owncloud_admin_user }}"
    --admin-pass "{{ owncloud_admin_pass }}"
  when: occ_already_installed.stdout == '1'

- name: Configure trusted domains
  shell: occ config:system:set trusted_domains {{ item.id }} --value="{{ item.hostname }}"
  with_items: "{{ owncloud_trusted_domains }}"

- name: Enable cron job mode
  shell: occ background:cron

- name: Install cronjob
  lineinfile:
    path: /var/spool/cron/crontabs/www-data
    line: '*/15  *  *  *  * {{ owncloud_document_root }}/occ system:cron'
    create: yes
    state: present
    mode: 0600
    owner: www-data
    group: crontab

- name: Configure Caching and File Locking
  shell: "{{ item }}"
  with_items:
    - occ config:system:set memcache.local --value '\OC\Memcache\APCu'
    - occ config:system:set memcache.locking --value '\OC\Memcache\Redis'
    - "occ config:system:set redis --value '{\"host\": \"127.0.0.1\", \"port\": \"6379\"}' --type json"

- name: Configure log rotation
  template:
    src: etc/logrotate.d/owncloud.j2
    dest: /etc/logrotate.d/owncloud

- name: Double check permissions are proper
  file:
    path: "{{ owncloud_document_root }}"
    recurse: yes
    owner: www-data
    group: www-data

- name: Install LetsEncrypt
  apt:
    state: latest
    name:
      - certbot
      - python3-certbot-apache

- name: Update LetsEncrypt cert
  shell: certbot -m "{{ owncloud_letsencrypt_email }}" --agree-tos -n certonly --apache --domains "{{ owncloud_external_hostname }}"
